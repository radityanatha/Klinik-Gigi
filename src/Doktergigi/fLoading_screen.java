/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Doktergigi;

import javax.swing.JOptionPane;

/**
 *
 * @author radit
 */
public class fLoading_screen extends javax.swing.JFrame {

    /**
     * Creates new form fLoading_screen
     */
    public fLoading_screen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        pBackgournd_loadin = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        lLogoapp = new javax.swing.JLabel();
        lLoading_label = new javax.swing.JLabel();
        lLoading_value = new javax.swing.JLabel();
        lBackground_loading_screen = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pBackgournd_loadin.setBackground(new java.awt.Color(204, 255, 204));
        pBackgournd_loadin.setPreferredSize(new java.awt.Dimension(734, 418));
        pBackgournd_loadin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jProgressBar1.setBackground(new java.awt.Color(204, 204, 255));
        jProgressBar1.setBorder(null);
        jProgressBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pBackgournd_loadin.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 370, 30));

        lLogoapp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Logo Klinik.png"))); // NOI18N
        pBackgournd_loadin.add(lLogoapp, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 0, -1, -1));

        lLoading_label.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lLoading_label.setForeground(new java.awt.Color(0, 0, 102));
        lLoading_label.setText("Loading .");
        pBackgournd_loadin.add(lLoading_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, -1, -1));

        lLoading_value.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lLoading_value.setForeground(new java.awt.Color(0, 0, 102));
        lLoading_value.setText("0%");
        pBackgournd_loadin.add(lLoading_value, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 150, -1, -1));

        lBackground_loading_screen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Background.jpg"))); // NOI18N
        lBackground_loading_screen.setText("jLabel1");
        lBackground_loading_screen.setMaximumSize(new java.awt.Dimension(734, 418));
        lBackground_loading_screen.setMinimumSize(new java.awt.Dimension(734, 418));
        lBackground_loading_screen.setPreferredSize(new java.awt.Dimension(734, 418));
        pBackgournd_loadin.add(lBackground_loading_screen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pBackgournd_loadin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pBackgournd_loadin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fLoading_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        // Membuat dan menampilkan frame loading
        fLoading_screen sp = new fLoading_screen();
        sp.setVisible(true);

        try {
            // Proses loading
            for (int i = 0; i <= 100; i++) {
                Thread.sleep(50); // Simulasi waktu loading
                sp.lLoading_value.setText(i + "%");

                // Update teks status loading berdasarkan persen
                if (i == 10) {
                    sp.lLoading_label.setText("Loading");
                } else if (i == 20) {
                    sp.lLoading_label.setText("Loading ...");
                } else if (i == 50) {
                    sp.lLoading_label.setText("Loading ........");
                } else if (i == 70) {
                    sp.lLoading_label.setText("Implementasi hampir selesai");
                } else if (i == 80) {
                    sp.lLoading_label.setText("Selesai");
                }

                // Update progress bar
                sp.jProgressBar1.setValue(i);
            }

            // Menutup loading screen setelah selesai
            sp.dispose();

            // Menampilkan frame dashboard setelah loading selesai
            jFrameDashboard jFrameDashboard = new jFrameDashboard();
            jFrameDashboard.setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
        }
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel lBackground_loading_screen;
    private javax.swing.JLabel lLoading_label;
    private javax.swing.JLabel lLoading_value;
    private javax.swing.JLabel lLogoapp;
    private javax.swing.JPanel pBackgournd_loadin;
    // End of variables declaration//GEN-END:variables
}
